@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using System.Data;
@using WebAdminConsole.ViewModels;
@model IEnumerable<UploadResultViewModel>

@{
    ViewData["Title"] = "Review";
}


<h4>Review and Save</h4>
<hr />

<div class="row">
    <div class="col-md-4">
        <h4>Review Stage Results</h4>
        <form asp-controller="Results" asp-action="Check" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input type="file" name="postedFile" class="btn btn-primary" />
            </div>
            <div class="form-group">
                <input type="submit" value="Check" class="btn btn-primary" />
            </div>    
        </form>
    </div>
    <div class="col-md-4">
        <h4>Save to Database</h4>
        <form asp-controller="Results" asp-action="Save" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input type="file" name="postedFile" class="btn btn-primary" />
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<hr />

@if (ViewData["Error"] != null)
{
    <h4>Missing Teams</h4>
    <h6 class="text-danger">@ViewData["Error"]</h6>
    <hr />
}


@if (Model != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Stage.Number)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Position)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BibNumber.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Team.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Runner.First)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Runner.Last)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Time)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Count)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                @Html.HiddenFor(modelItem => item.Stage.StageId)
                @Html.HiddenFor(modelItem => item.BibNumber.BibNumberId)
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Stage.Number)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Position)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BibNumber.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Team.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Runner.First)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Runner.Last)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Time)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Count)
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}


